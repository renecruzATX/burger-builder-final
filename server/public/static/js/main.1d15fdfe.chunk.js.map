{"version":3,"sources":["hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHander/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/OrderDeets/OrderDeets.js","containers/Orders/ConfirmDelete/ConfirmDelete.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js","containers/Orders/OrderDeets/OrderDeets.module.css","components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css"],"names":["aux","props","children","logo","react_default","a","createElement","className","styles","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","NavLink","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedStyles","SideDrawer","Closed","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","prev","curr","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchaseable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","authSuccess","username","userId","logout","localStorage","removeItem","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","el","disabledInfo","objectSpread","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","Burger_OrderSummary_OrderSummary","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","shift","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputStyles","InputElement","validationError","invalid","touched","ValidationError","valueType","shouldValidate","Invalid","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","city","zipCode","minLength","maxLength","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangeHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","_id","console","log","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","Redirect","purchasedRedirect","purchased","Route","match","component","amount","ingredientOutput","ig","display","border","padding","Order","orderDetails","orderDelete","OrderDeets","Font","Line","lettuce","bacon","cheese","meat","ConfirmDelete","deleteOrder","Orders","deleted","closeModalHandler","onConfirmDelete","onSetOrderId","onFetchOrders","delete","_this3","orderDeets","confDelete","Orders_OrderDeets_OrderDeets","confirmDelete","Orders_ConfirmDelete_ConfirmDelete","deletOrderHandler","orders","orderDetailsHandler","confirmDeleteHandler","window","alert","fetchedOrders","err","Auth","isEmail","password","isSignUp","controlName","updatedControls","defineProperty","submitHandler","onAuth","buildingBurger","authRedirectPath","message","errorMessage","ErrorMessage","authRedirect","wrapper","building","authData","url","setItem","Logout","onLogout","App","onTryAutoSignup","routes","Switch","hoc_Layout_Layout","withRouter","getItem","Boolean","location","hostname","initialState","INGREDIENT_PRICES","reducer","undefined","action","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","enable","Success","Danger","__webpack_require__","p","load2"],"mappings":"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","file":"static/js/main.1d15fdfe.chunk.js","sourcesContent":["//higher order component that can be used instead of a div \n//to allow components render next to each other in React\nconst aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport styles from './Logo.module.css';\n\n//renders the burger logo on the top left\nconst logo = (props) => (\n    <div className={styles.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"Cruz Burger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport styles from './NavigationItem.module.css';\n\n//renders each Navigation link in the top right of the app\nconst navigationItem = (props) => (\n    <li className={styles.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName={styles.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport styles from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\n//renders each navigation item in the proper order and if authentication is required\nconst navigationItems = (props) => (\n    <ul className={styles.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        {props.isAuthenticated \n            ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\n        {!props.isAuthenticated\n            ? <NavigationItem link=\"/login\">Login</NavigationItem>\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport styles from './DrawerToggle.module.css';\n\n//renders the menu button in mobile view\nconst drawerToggle = (props) => (\n    <div className={styles.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport styles from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\n//renders the toolbar at the top of the app and changes for mobile\nconst toolbar = (props) => (\n    <header className={styles.Toolbar}>\n        <DrawerToggle  clicked={props.drawerToggleClicked}/>\n        <div className={styles.Logo}>\n            <Logo/>\n        </div>\n        <nav className={styles.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport styles from './Backdrop.module.css';\n\n//renders a backdrop when modals appear\nconst backdrop = (props) => (\n    props.show ? <div className={styles.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport styles from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux';\n\n//renders the sidedrawer in the mobile view\nconst sideDrawer = (props) => {\n    let attachedStyles = [styles.SideDrawer, styles.Closed];\n    if (props.open) {\n        attachedStyles = [styles.SideDrawer, styles.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedStyles.join(' ')}>                \n                <div className={styles.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth}/>\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Aux from '../Aux';\nimport styles from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\n//higher order component that gives the whole app its look\nclass Layout extends Component {\n    state ={\n         showSideDrawer: false,\n    }\n    \n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer};\n        });\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar \n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer \n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer} \n                    closed = {this.sideDrawerClosedHandler} />\n                <main className={styles.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './BurgerIngredient.module.css';\n\n//renders each ingredient through CSS\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={styles.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={styles.BreadTop}>\n                        <div className={styles.Seeds1}></div>\n                        <div className={styles.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={styles.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={styles.Cheese}></div>;\n                break;\n            case ('lettuce'):\n                ingredient = <div className={styles.Lettuce}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={styles.Bacon}></div>;\n                break;\n            default:\n                    ingredient = null;\n        }\n        return ingredient;\n    };\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n\n","import React from 'react';\n\nimport styles from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\n//renders the burger on the burger builder page\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i)=> {\n                return <BurgerIngredient key={igKey + i} type= {igKey}/>;\n        });\n    })\n    .reduce((prev, curr)=>{\n        return prev.concat(curr)\n    }, []);\n    if (transformedIngredients.length ===0) {\n        transformedIngredients = <p>Please add ingredients to your burger!</p>\n    }\n    return (\n        <div className={styles.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n};\n\n\nexport default burger;","import React from 'react';\nimport styles from './BuildControl.module.css';\n\n//presentational component that renders the buttons that add or remove ingredients to the burger\nconst buildControl = (props) => (\n    <div className={styles.BuildControl}>\n        <div className={styles.Label}>{props.label}</div>\n        <button \n            className={styles.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={styles.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\n\nexport default buildControl;","import React from 'react';\n\nimport styles from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl.js'\n\n//provides the ingredients desired for the burger\nconst controls = [\n    {label: 'Lettuce', type: 'lettuce'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'},\n];\n\n//automatically renders the ingredients available in the burger builder\nconst buildControls = (props) => (\n    <div className={styles.BuildControls}>\n        <p>Current Price: $<strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className={styles.OrderButton}\n            disabled={!props.purchaseable} \n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN IN TO ORDER'}</button>\n    </div>\n);\n\n\nexport default buildControls;","import React, {Component} from 'react';\nimport styles from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\n//renders when the orderSummary is required\nclass Modal extends Component {\n    //keeps orderSummary from updating the state until it is necessary, improving performance\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;        \n    }\n    \n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div \n                    className={styles.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1': '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        );\n    }\n}\n\n\nexport default Modal;","import React from 'react';\nimport styles from './Button.module.css';\n\n//presentational component button that is used throughout the app\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[styles.Button, styles[props.btnType]].join(' ') }\n        onClick={props.clicked}> {props.children}</button>\n);\n\nexport default button;","import React, {Component} from 'react';\n\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button';\n\n\n//provides a summary of the burger chosen before moving on to checkout page\nclass OrderSummary extends Component {        \n    render () {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(igKey=>{\n            return (\n                <li key={igKey}>\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\n                </li>);\n        });\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\nimport styles from './Spinner.module.css';\n\n//renders when retrieving data from db\nconst spinner = () => (\n    <div className={styles.Loader}>Loading...</div>\n);\nexport default spinner;","import React, {Component} from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux';\n\n//higher order component that wraps components and uses axios interceptors to provide error handling\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n        \n        //initializes axios interceptors for components wrapped\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null})\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error})\n            });\n        }\n\n        //unmounts interceptors when not needed to improve performance\n        componentWillUnmount () {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.request.eject(this.resInterceptor);\n        }\n\n        //sets errors to null when user closes modal\n        errorConfirmedHandler = () => {\n            this.setState({error: null})\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error : null}\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Aux>\n    \n            );\n        }\n    } \n}\n\nexport default withErrorHandler;","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\n//all the actions available to the Auth container\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, username) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        userId: username\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId')\n    //localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime);\n    };\n};\n\nexport const auth = (email, password, isSignUp) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            username: email,\n            password: password\n        }\n        let url = '/users';\n        if (!isSignUp) {\n            url = '/sessions';\n        }\n        axios.post(url, authData)\n            .then(response => {\n                //const expirationDate = new Date (new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.token)\n                localStorage.setItem('userId', response.data.username)\n                //localStorage.setItem('expirationDate', expirationDate)\n                dispatch(authSuccess(response.data.token, response.data.username));\n                //dispatch(checkAuthTimeout(response.data.expiresIn))\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        }else{\n            //const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            /*if (expirationDate <= new Date()) {\n                dispatch(logout())\n            }else {\n                move stuff below in here once time is figured out\n            }*/\n            const userId = localStorage.getItem('userId');\n            dispatch(authSuccess(token, userId));\n            //dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime()));\n        }\n    };\n};","//all the action types available to the redux store\n\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n\nexport const SET_ORDER_ID = 'SET_ORDER_ID';\n\nexport const CONFIRM_DELETE = 'CONFIRM_DELETE';\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHander/withErrorHandler';\nimport axios from 'axios';\nimport * as actions from '../../store/actions/index';\n\n//renders the main burger builder container where the burger is built and ordered\nclass BurgerBuilder extends Component {\n    state = {\n        purchasing: false,\n        \n    }\n\n    //initializes the ingredients from the server\n    componentDidMount () {\n        this.props.onInitIngredients();\n    }\n\n    //lets the app know that there are ingredients in the burger and are available to purchase\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n        .map(igKey=>{\n            return ingredients[igKey];\n        })\n        .reduce((sum, el)=>{\n            return sum + el;\n        }, 0);\n        return sum > 0;\n    }\n\n    //moves to the checkout summary page if submit button is clicked    \n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({purchasing: true});\n        }else{\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/login');\n        };\n    };\n\n    //cancels order if cancel button is clicked\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    //continues to gather order info \n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();                    \n        this.props.history.push('/checkout');\n    }\n    \n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <=0\n        }\n        let orderSummary = null;        \n        \n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner/>;\n\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings}/>\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo} \n                        purchaseable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary                         \n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />\n        }\n                \n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    };\n}\n\nconst mapDispatchtoProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\n//all the redux actions available to the burger builder container\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };    \n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients')\n            .then(response => {                \n                dispatch(setIngredients(response.data.shift()));\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed());\n            });\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\n//all the redux actions available for ordering burger\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};  \n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders?auth=' + token, orderData)\n            .then(response => {     \n                dispatch(purchaseBurgerSuccess(response.data._id, orderData));\n            })\n            .catch(error => {\n                console.log('Error: ', error);\n                dispatch(purchaseBurgerFail(error));\n            });\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        axios.get('/orders?auth=' + token)\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err));\n            });\n    };\n};\n\nexport const setOrderId = (orderId) => {\n    return {\n        type: actionTypes.SET_ORDER_ID,\n        orderId: orderId\n    };\n};\n\nexport const confirmDelete = (confDelete) => {\n    return {\n        type: actionTypes.CONFIRM_DELETE,\n        confDelete: confDelete\n    };\n};","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport styles from './CheckoutSummary.module.css';\n\n//provides a summary of burger chosen and price before submitting order\nconst checkoutSummary = (props) => {\n    return (\n        <div className={styles.CheckoutSummary}>\n            <h1>Hope it tastes Great!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>Cancel</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>Continue</Button>\n        </div>\n    );\n\n};\n\nexport default checkoutSummary;","import React from 'react';\nimport styles from './Input.module.css';\n\n//presentational input component that takes props and passes on values\nconst input = (props) => {\n    let inputElement = null;\n    const inputStyles = [styles.InputElement];\n    let validationError = null;\n    \n    if (props.invalid && props.touched) {\n        validationError = <p className={styles.ValidationError}>Please enter a valid {props.valueType}!</p>;\n    }\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputStyles.push(styles.Invalid);\n    }\n    \n    switch(props.elementType) {\n        case ('input'):\n            inputElement = <input \n                className={inputStyles.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}/>;\n            break;\n        case ('textarea'):\n            inputElement = <textarea\n                className={inputStyles.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}/>;\n            break;\n        case ('select'):\n            inputElement = (\n                <select\n                    className={inputStyles.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input \n                className={inputStyles.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}/>;\n    }\n\n    return (\n        <div className={styles.Input}>\n            <label className={styles.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    )    \n};\n\nexport default input;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport styles from './ContactData.module.css';\nimport axios from 'axios';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHander/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\n//gathers data from the user to submit to the server\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Street Address'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            city: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your City'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Zip Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email Address'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }               \n        },\n        formIsValid: false\n    }\n\n    //grabs data from order form and submits it to the server\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const data = {\n            order: { \n                ingredients: this.props.ings,\n                price: this.props.price,\n                orderData: formData,\n                userId: this.props.userId                \n            }\n        };\n        this.props.onOrderBurger(data, this.props.token);            \n    }\n\n    //checks if inputs are valid from user\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.minLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    //checks the form is valid for submitting\n    inputChangeHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});         \n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map( formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        valueType={formElement.id}                        \n                        changed={(event) => this.inputChangeHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Place Your Order</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className={styles.ContactData}>\n                <h4>Enter your Data</h4>\n                {form}\n            </div>\n        );\n    }\n    \n};\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice, \n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId        \n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    \n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n        \n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\n","import React, {Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux'; \n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\n//renders the checkout page when continue is clicked\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n    \n    render () {\n        let summary = <Redirect to=\"/\"/>;\n        if (this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary \n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData}/>\n                </div>\n            )\n        }\n        return summary; \n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport styles from './Order.module.css';\nimport Button from '../UI/Button/Button';\n\n//renders an order that is retrieved from the database\nconst order = (props) => {\n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName , \n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={ig.name}>{ig.name} ({ig.amount}) </span>\n    });\n\n    return (\n        <div className={styles.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>${props.price.toFixed(2)}</strong></p>\n            <Button \n                clicked={props.orderDetails} \n                btnType='Success'>Order Details</Button>\n            <Button \n                clicked={props.orderDelete} \n                btnType='Danger'>Delete Order</Button>\n        </div>            \n    );\n    \n};\n\nexport default order;","import React from 'react';\nimport styles from './OrderDeets.module.css';\n\nconst OrderDeets = (props) => (\n    <div className={styles.Font}>             \n        <strong>Ingredients:</strong>\n          <p className={styles.Line}>Lettuce: {props.order.ingredients.lettuce}</p>\n          <p className={styles.Line}>Bacon: {props.order.ingredients.bacon}</p>\n          <p className={styles.Line}>Cheese: {props.order.ingredients.cheese}</p>\n          <p className={styles.Line}>Meat: {props.order.ingredients.meat}</p>\n        <strong>Total Price: ${props.order.price.toFixed(2)}</strong>\n        <br/><br/>\n        <strong>Delivery Address:</strong>\n          <p className={styles.Line}>Name: {props.order.orderData.name}</p>\n          <p className={styles.Line}>Street: {props.order.orderData.street}</p>\n          <p className={styles.Line}>City: {props.order.orderData.city}</p>\n          <p className={styles.Line}>ZipCode: {props.order.orderData.zipCode}</p>\n          <p className={styles.Line}>Email: {props.order.orderData.email}</p>\n          <p className={styles.Line}>Delivery Method: {props.order.orderData.deliveryMethod}</p>\n      </div>\n);\n\nexport default OrderDeets;","import React from 'react';\nimport Button from '../../../components/UI/Button/Button';\n\nconst ConfirmDelete = (props) => (\n    <div>\n        <h3>Are you sure you want to delete this order?</h3>\n        <Button clicked={props.deleteOrder} btnType='Danger'>CLICK HERE TO DELETE!</Button>\n    </div>\n);\n\nexport default ConfirmDelete;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from 'axios';\n//import withErrorHandler from '../../hoc/withErrorHander/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderDeets from '../../containers/Orders/OrderDeets/OrderDeets';\nimport ConfirmDelete from '../../containers/Orders/ConfirmDelete/ConfirmDelete';\n\n//renders past orders on the Orders page\nclass Orders extends Component {\n    state = {\n        show: false,\n        deleted: null\n    };\n\n    //initializes the orders from the server\n    componentDidMount () {\n        this.props.onFetchOrders(this.props.token);\n    }\n\n    //sets the order props so a modal can be shown of the order details\n    orderDetailsHandler (order) {\n        this.props.onSetOrderId(order.order);\n        this.setState({show:true});       \n    }\n\n    //Sets conditions for a Modal to pop up confirming the deletion of an order\n    confirmDeleteHandler (order) {\n        this.props.onSetOrderId(order._id);\n        this.props.onConfirmDelete(true);\n        this.setState({show:true, deleted: null});       \n    }\n\n    //deletes the selected order\n    deletOrderHandler () {\n        axios.delete('/orders/' + this.props.orderId)\n                .then(response => {\n                    this.setState({\n                        deleted: response.data                        \n                    })\n                })\n                .catch(error => error);                  \n    }\n\n    //closes any modals and resets all states related to the orders\n    closeModalHandler = () => {\n        this.props.onConfirmDelete(false);\n        this.setState({show: false, deleted: null});\n        this.props.onSetOrderId(0);\n    }\n\n    render () {\n        let orderDeets = null;\n        if (this.props.orderId && !this.props.confDelete) {\n            orderDeets = <OrderDeets order={this.props.orderId}/>\n        }\n\n        let confirmDelete = null;\n        if (this.props.confDelete) {\n            confirmDelete = <ConfirmDelete deleteOrder={()=>this.deletOrderHandler()}/>\n        }\n\n        let orders = <Spinner/>;\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order =>(\n                <div key={(order.id * 7)}>\n                    <Order \n                    key={order.id}\n                    ingredients={order.order.ingredients}\n                    price = {+order.order.price}\n                    orderDetails={()=>this.orderDetailsHandler(order)}\n                    orderDelete={()=>this.confirmDeleteHandler(order)}/>                        \n                </div>\n            ))\n        };\n\n        if (this.state.deleted) {\n            window.alert('Order Deleted!!!!');\n            this.closeModalHandler();        \n            this.props.onFetchOrders(this.props.token);\n        };  \n\n        return (\n            <div>\n                <Modal show={this.state.show} modalClosed={this.closeModalHandler}>\n                    {orderDeets}\n                    {confirmDelete}\n                </Modal>\n                {orders}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        orderId: state.order.orderId,\n        confDelete: state.order.confDelete\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token)),\n        onSetOrderId: (orderId) => dispatch(actions.setOrderId(orderId)),\n        onConfirmDelete: (confDelete) => dispatch(actions.confirmDelete(confDelete))\n    };\n};\n\n//export default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport styles from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\n\n//renders the login page\nclass Auth extends Component {\n    state ={\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Email Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignUp: true\n    };\n\n    //checks to see if you're currently building a burger and not coming from the main page\n    //directs you either to burger builder to create a burger\n    //or to the checkout page if you already have built a burger and need to login to continue\n    componentDidMount () {\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\n            this.props.onSetAuthRedirectPath();\n        }\n    }\n\n    //check if inputs are valid\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.minLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    //changes inputs when typing\n    inputChangeHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({controls: updatedControls});\n    }\n\n    //called when Submit button is clicked, passes on login credentials\n    //changes state to let app know that user is logged in\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\n    }\n       \n    render () {\n        //gathers which input is needed from state above\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n        //maps each imput and renders it in the proper order\n        let form = formElementsArray.map(formElement => (\n            <Input \n                key={formElement.id} \n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                valueType={formElement.id}                        \n                changed={(event) => this.inputChangeHandler(event, formElement.id)} />\n        ));\n        \n        //provides a message that lets the user know mode they are in\n        let message = (!this.state.isSignUp) ? <h3>Welcome Back! Log in for Burger!</h3> : <h3>Sign Up to order a Delicious Burger!</h3>;\n        \n        //provides a spinner if the app is retrieving credentials\n        if (this.props.loading) {\n            form = <Spinner/>\n        }\n\n        //provides an error message during login if error occurs\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p className={styles.ErrorMessage}>{this.props.error}</p>\n            )            \n        }\n\n        //redirects to the correct path after login\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\n        }\n            \n        return (\n            <div className={styles.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <div className={styles.wrapper}>\n                    <button \n                        onClick={() => this.setState({isSignUp: false})}\n                        className={styles.button}>Log In</button>\n                    <button \n                        onClick={() => this.setState({isSignUp: true})}\n                        className={styles.button}>Sign Up</button>\n                </div>\n                {message}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\" >SUBMIT</Button>\n                </form>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, {Component} from 'react';\nimport * as actions from '../../../store/actions/index';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n//renders when user is Logged in and logs out when clicked\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout();\n    }\n    \n    render () {\n        return (\n            <Redirect to='/'/>\n        );\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index'; \n\nclass App extends Component {\n  //checks to see if user is already logged in\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    //renders routes that don't need authentication\n    let routes = (\n      <Switch>\n        <Route path=\"/login\" component={Auth}/>\n        <Route path=\"/\" exact component={BurgerBuilder}/>\n        <Redirect to=\"/\"/>\n      </Switch>\n    );\n    //if user is authenticated, renders all routes available\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout}/>\n          <Route path=\"/orders\" component={Orders}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/\" exact component={BurgerBuilder}/>\n          <Redirect to=\"/\"/>\n        </Switch>\n      );\n    };\n\n    //Layout is the container that lay out the rest of the app\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\n//grabbing state from the redux store for this container\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\n//changes state if necessary to the Redux store\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\n//connect function from Redux interferes with React Router so withRouter() allows it to work \nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"," import * as actionTypes from '../actions/actionTypes';\n\n//contains all the state available to the burger builder\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    lettuce: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            };\n        case actionTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: action.ingredients,\n                totalPrice: 4,\n                error: false,\n                building: false\n            };    \n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\n//contains all the state available for ordering the burger\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false, \n    orderId: 0,\n    confDelete: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false\n            };\n        case actionTypes.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId\n            };\n            return {\n                ...state,\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder),                \n            };           \n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        case actionTypes.SET_ORDER_ID:\n            return{\n                ...state,\n                orderId: action.orderId\n            }\n        case actionTypes.CONFIRM_DELETE:\n            return{\n                ...state,\n                confDelete: action.confDelete\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\n//contains all the state available for the authorization\n\nconst initialState =  {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return {\n                ...state,\n                error: null,\n                loading: true\n            };\n        case actionTypes.AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.token,\n                userId: action.userId,\n                error: null,\n                loading: false\n            };\n        case actionTypes.AUTH_FAIL:\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            };\n        case actionTypes.AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n                userId: null\n            };\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            return {\n                ...state,\n                authRedirectPath: action.path\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\n \nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\n//enables Redux dev tools in browsers\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//combines all the reducer files created so they can be passed to createStore()\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\n//creates Redux store to manage state for the app\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n//Provider enables redux for the app\n//BrowserRouter enables switching between pages without refreshing the app\nconst app = (\n    <Provider store={store}> \n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Font\":\"OrderDeets_Font__18tff\",\"Line\":\"OrderDeets_Line__3WVbm\",\"Burger\":\"OrderDeets_Burger__1E7jt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__JRUUF\",\"BreadTop\":\"BurgerIngredient_BreadTop__3LSj1\",\"Seeds1\":\"BurgerIngredient_Seeds1__1ldDT\",\"Seeds2\":\"BurgerIngredient_Seeds2__laPy0\",\"Meat\":\"BurgerIngredient_Meat__2Mm0a\",\"Cheese\":\"BurgerIngredient_Cheese__27eot\",\"Lettuce\":\"BurgerIngredient_Lettuce__2M5FF\",\"Bacon\":\"BurgerIngredient_Bacon__1PfzA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__5p31L\",\"Open\":\"SideDrawer_Open__22FY2\",\"Closed\":\"SideDrawer_Closed__GeY67\",\"Logo\":\"SideDrawer_Logo__11a0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3lgXo\",\"Label\":\"Input_Label__XKQIJ\",\"InputElement\":\"Input_InputElement__2uuFZ\",\"Invalid\":\"Input_Invalid__3kf1R\",\"ValidationError\":\"Input_ValidationError__1CwAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__fVwyo\",\"wrapper\":\"Auth_wrapper__2b_Xl\",\"button\":\"Auth_button__1iGuX\",\"active\":\"Auth_active__12BYK\",\"ErrorMessage\":\"Auth_ErrorMessage__PcAjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__Nx0bk\",\"Label\":\"BuildControl_Label__2JKNP\",\"Less\":\"BuildControl_Less__1-lKu\",\"More\":\"BuildControl_More__xRmA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1iJd9\",\"Logo\":\"Toolbar_Logo__34vyk\",\"DesktopOnly\":\"Toolbar_DesktopOnly__5tzB_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__CLgbL\",\"active\":\"NavigationItem_active__lpeGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3mOtk\",\"OrderButton\":\"BuildControls_OrderButton__1ShX2\",\"enable\":\"BuildControls_enable__Ckfpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Y3RF\",\"Success\":\"Button_Success__334ZM\",\"Danger\":\"Button_Danger__3KaI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__22di8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1AjkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3M_zj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__LT7qc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1YARA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__29poK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__10KJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__DpW9U\",\"load2\":\"Spinner_load2__1Aj2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3FR7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3Z9fA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1d75e\"};"],"sourceRoot":""}